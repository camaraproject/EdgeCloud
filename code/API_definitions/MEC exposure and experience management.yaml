---
openapi: 3.0.3
############################################################################
#                                     API info                             #
############################################################################
info:
  contact:
    email: sp-edc@lists.camaraproject.org
  title: MEC Exposure & Experience Management API
  version: 0.9.2
  description: |
    # Introduction
    ---

    Use the MEC Exposure & Experience Management API for discovery and utilisation of Multi-Access Edge Compute (MEC)resources and
    applications.


    ---
    # API Scope

    ---

    APIs defined in this version of the specification can be categorized
    into the following areas:

    * __MEC Edge Discovery__ - discovery of optimal MEC platforms
    * __MEC application Discovery__ - discovery of optimal Application Endpoints for client connections
    * __MEC Application Profile management__ - register, retrieve, update,
    and delete MEC Application Profiles
    * __MEC application Endpoint management__ - register one or more Application Endpoints, and retrieve, update, and delete those
    registrations
    * __MEC Edge Event notification__ - subscription management for
    MEC and application discovery Event notifications

    ---
    # Definitions
    ---
    This section provides definitions of terminologies commonly referred
    to throughout the API descriptions.

    * __API Consumer__ - A user or an application consuming the MEC
    Exposure and Experience Management APIs.
    * __Application application Provider__ - the developer/publisher
    who deploys applications on MEC platforms.
    * __Density__ - Minimum 4G/5G subscriber density in a geographical
    area, represented as the number of subscribers per square kilometer.
    * __Edge Application__ - A cloud application that has some
    applications deployed to MEC Platforms to take advantage of
    low latency and high bandwidth when interacting with devices.
    * __Edge Discovery application (EDS)__ - MEC Exposure and
    Experience Management APIs exposed as a application by a TSP.
    * __Edge Resource__ - An object defined by the sevice provider
    representing an edge resource within its network domain,
    such as a MEC Platform.
    * __Event__ - A MEC event is triggered if the
    previously-discovered MEC platform is no longer the optimal
    choice of all available MEC platforms, due to a change in
    the underlying network or MEC infrastructure. The TSP will
    send out change notifications to API Consumers who have
    active subscription to the event notification.
    * __MEC  Platform__ - A collection of cloud computing
    resources housed in a TSP's network facility that
    provide Multi-access Edge Computing (MEC) capabilities.
    * __Optimal MEC  Platforms__ - A list of one or more
    optimal MEC Platforms to register a application
    Endpoint, based on the latency and availability
    of each MEC platform, and optionally also based
    on various query criteria (Application Profile,
    Region, subscriber density or UE identity)
    defined by the API Consumer.
    * __Optimal MEC Application Endpoints__ â€“ A list
    of one or more MEC Application Endpoints that
    provide optimal user experience to the client
    device, based on internal network conditions
    known to the MEC Platform, and also optionally
    based on various query criteria (Application
    Profile, Region, subscriber density or UE identity)
    defined by the API Consumer.
    * __Region__ - A TSP-defined string identifier
    representing a certain geographical or logical
    area where MEC resources and applications are provided.
    * __Registered MEC Hosted applications__ - Applications
    running on MEC platforms which are registered with
    Edge Discovery application using the application
    registry APIs.
    * __application Endpoint__ - The routable endpoint
    of the application(s) within a deployed application
    that clients connect to, where a application is a
    subcomponent of application
    * __Application Profile__ - Information about the
    MEC application and the associated application
    characteristics.
    * __TSP__ - Telecommunications application Provider.
    * __UEIdentity__ - User Equipment identity, which
    can be a device's IP address, MSISDN, IMEI, MDN, or GPSI.
    * __Zone__ - A logical collection of MEC Platforms
    in a telecommunication provider's network. A Zone is
    part of a Region.

    ---
    # Link relationships
    ---

    __REGIONS__
    * __All-regions__  list all regions

    __ZONES__
    * __All-zones__  list all available zones

    __MEC PLATFORMS__
    * __All-mec-platforms__ list all MEC platforms
    * __Optimal-MECPlatforms-by-density__ return the optimal
    MEC platform for a given subscriber density
    * __Optimal-MECPlatforms-by-application-profile__
    return the optimal MEC platform for a
    given Application Profile
    * __Optimal-MECPlatforms-by-UE__ return the
    optimal MEC platform for a given UE identifier
    * __Optimal-MECPlatforms-by-region__ return the
    optimal MEC platform for a given region
    * __Optimal-MECPlatforms-by-zone__ return the
    optimal MEC platform for a given zone

    __Application Endpoints__
    * __All-application-endpoints__ list all Application Endpoints
    * __Register-application-endpoint__ Register a application Endpoint
    * __Update-application-endpoint__ Update a application Endpoint
    * __Delete-application-endpoint__ Delete a application Endpoint
    * __Optimal-application-endpoints-by-zone__ return
    the optimal Application Endpoints associated with
    the specified Zone
    * __Optimal-application-endpoints-by-region__ return
    the optimal Application Endpoints associated with the
    specified Region
    * __Optimal-application-endpoints-by-application-profile__
    return the optimal Application Endpoints associated
    with the specified Application Profile

    __Application Profiles__
    * __All-application-profiles__ list all Application Profiles
    * __Create-application-profile__ create a new Application Profile
    * __Update-application-profiles__ Update a Application Profiles
    * __Delete-application-profile__ Delete a Application
    Profile based on ID

    __COMMON__
    * __Self__ the self-referring URI for the response
    * __Version-History__ link to version history for this API
    * __Terms-of-application__ link The Terms of
    application for this API
    * __Bookmark__ link to the API bookmark

    ---
    # Security and resilience
    ---
    * __Authentication:__ API requests are made with
    the API Consumer's unique key
    * __Integrity:__ APIs requests, responses and
    callbacks are made using HTTP over TLS 1.3 (HTTPS)
    * __Consent to access resources__ is brokered
    via OAuth2.0 with implicit, password and client
    credentials grant flows
    * __Replay errors__ are mitigated through use
    of request correlator IDs.

  license:
    name: Apache-2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"

############################################################################
#                                     Security                             #
############################################################################
security:
  - oAuth2:
      - "edge:discovery:read"
      - "edge:applicationprofile:read"
      - "edge:applicationprofile:write"
      - "edge:applicationregistry:read"
      - "edge:applicationregistry:write"

############################################################################
#                                     Servers                              #
############################################################################
servers:
  - url: "http://localhost:{port}/v1"
    description: Local host API
    variables:
      port:
        enum:
          - "3333"
        default: "3333"
  - url: "https://edge.example.com:{port}/v1"
    description: Production API
    variables:
      port:
        enum:
          - "443"
          - "8443"
        default: "443"
  - url: "https://{region}.edge.example.com:{port}/v1"
    description: Production API for Regions
    variables:
      region:
        default: east
      port:
        enum:
          - "443"
          - "8443"
        default: "443"

############################################################################
#                                     Tags                                 #
############################################################################
tags:
  - name: Discovery
    description: |
      Discover the regions and zones in the MEC
      application, find optimal MEC Platforms for
      your deployed applications, and optimal
      Application Endpoints for your clients to connect to.
  - name: Application Endpoints
    description: |
      Register and manage the routable Application
      Endpoints of your deployed applications.
  - name: Application Profiles
    description: |
      Create and manage profiles that describe the
      application requirements of your MEC applications,
      such as the required connection bandwidth
      and maximum latency.
# - name: Events and Subscriptions
#    description: |
#      Subscribe to event notification callbacks to monitor platform and workload events and retrieve event details.

############################################################################
#                                     Paths                                #
############################################################################
paths:
  /application-profiles:
    post:
      operationId: create-application-profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcesApplicationProfile"
        description: Application Profile
      responses:
        "200":
          description: good
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationProfileId"
        "401":
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Application Profiles
      summary: Create a Application Profile
      description: Creates a Application Profile that
        describes the resource requirements of a application.
    get:
      operationId: get-application-profiles
      responses:
        "200":
          description: List all Application Profiles registered
            under your API key
          content:
            application/json:
              schema:
                title: GetapplicationProfilesResponse
                type: object
                properties:
                  applicationProfiles:
                    type: array
                    items:
                      $ref: "#/components/schemas/applicationProfile"
        "401":
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Application Profiles
      summary: List all Application Profiles registered under your API key
      description: List all Application Profiles registered under your API key

  "/application-profiles/{applicationProfileId}":
    parameters:
      - name: applicationProfileId
        in: path
        required: true
        description: applicationProfileid
        schema:
          type: string
    get:
      operationId: get-application-profile-by-profile-Id
      summary: Fetch a Application Profile
      description: Returns a specified Application Profile.
      responses:
        "200":
          description: Requested Application Profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/applicationProfile"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Application Profiles
    put:
      summary: Update Application Profile
      description: Update the definition of a Application Profile.
      operationId: update-application-profile
      requestBody:
        description: Application Profile definition
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcesApplicationProfile"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Application Profiles
    delete:
      summary: Delete a Application Profile
      operationId: delete-application-profile
      responses:
        "200":
          description: application profile has been deleted
        "400":
          $ref: "#/components/responses/Generic400"
        "401":
          $ref: "#/components/responses/Generic401"
        "403":
          $ref: "#/components/responses/Generic403"
        "404":
          $ref: "#/components/responses/Generic404"
        "409":
          $ref: "#/components/responses/Generic409"
        "500":
          $ref: "#/components/responses/Generic500"
        "503":
          $ref: "#/components/responses/Generic503"
      description: Delete Application Profile based on
        unique Application Profile ID
      tags:
        - Application Profiles

  /application-endpoints:
    get:
      operationId: get-applciation-endpoints
      parameters:
        - $ref: "#/components/parameters/region"
        - $ref: "#/components/parameters/applicationEndpointsId"
        - $ref: "#/components/parameters/UEIdentityType"
        - $ref: "#/components/parameters/UEIdentity"
      responses:
        "200":
          description: Find optimal Application Endpoints for clients to connect to
          content:
            application/json:
              schema:
                title: GetapplicationEndpointsResponse
                type: object
                properties:
                  applicationEndpoints:
                    type: array
                    items:
                      $ref: "#/components/schemas/ResourcesEdgeHostedapplication"
        "401":
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Discovery
      summary: Find optimal Application Endpoints for
        clients to connect to
      description: Returns a list of optimal Application
        Endpoints that client devices can connect to. You can
        search based on Application Profile, Region,
        subscriber density or UEIdentity.
    post:
      operationId: register-application-endpoints
      requestBody:
        description: Array of Application Endpoints for a
          deployed application
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ResourcesEdgeHostedapplication"
      responses:
        "201":
          # Action: discuss with team on diff with implementation and no 200 response
          description: Returns a applicationEndpointsId
          content:
            application/json:
              schema:
                title: PostapplicationEndpointResponse
                type: object
                properties:
                  applicationEndpointsId:
                    $ref: "#/components/schemas/TypesApplicationEndpointsId"
        "401":
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Application Endpoints
      summary: Register Application Endpoints
      description: Register Application Endpoints of a
        deployed application to specified MEC Platforms.

  "/application-endpoints/{applicationEndpointsId}":
    parameters:
      - name: applicationEndpointsId
        in: path
        required: true
        description: applicationEndpointsId param //added desc
        schema:
          $ref: "#/components/schemas/TypesApplicationEndpointsId"
    get:
      operationId: get-application-endpoints-by-applicationEndpointsId
      responses:
        "200":
          description: Arry of registered Application Endpoints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResourcesEdgeHostedapplication"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Application Endpoints
      summary: Get registered edge application endpoint information
      description: Returns endpoint information for all
        Application Endpoints registered to a
        specified applicationEndpointId.
    put:
      operationId: update-application-endpoint
      requestBody:
        description: application Endpoint information
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ResourcesEdgeHostedapplication"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Application Endpoints
      summary: Update a application Endpoint
      description: Update registered application Endpoint information.
    delete:
      operationId: deregister-application-endpoint
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Application Endpoints
      summary: Deregister an application's application Endpoint
      description: Deregister an application's application
        Endpoint from the MEC Platform(s).

  /mecplatforms:
    get:
      operationId: get-mecplatforms
      parameters:
        - $ref: "#/components/parameters/applicationProfileId"
        - $ref: "#/components/parameters/UEIdentityType"
        - $ref: "#/components/parameters/UEIdentity"
      responses:
        "200":
          description: MEC platforms matching query parameters
          content:
            application/json:
              schema:
                title: GetMECPlatformsResponse
                type: object
                properties:
                  mecPlatforms:
                    type: array
                    items:
                      $ref: "#/components/schemas/ResourcesMecPlatform"
        "401":
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/Unexpected"
      tags:
        - Discovery
      summary: Discover optimal MEC Platforms for
        deployed applications
      description: Returns a list of optimal MEC Platforms
        where you can register your deployed application.
        You can choose to search without passing any of
        the inputs paramaters or a combination of
        Application Profile, Region, subscriber
        density or UEIdentity.

components:
  ######################################################
  #  OAUTH
  #######################################################
  securitySchemes:
    oAuth2:
      type: oauth2
      description: "This API uses OAuth 2 with the implicit, password and client credentials grant flow"
      flows:
        implicit:
          authorizationUrl: "https://example.com/oauth/authorize"
          scopes:
            "discovery:read": Grant read-only access to
              discovery data
            "applicationprofile:read": Grant read-only
              access to Application Profile data
            "applicationprofile:write": Grant write access
              to Application Profile data
            "applicationregistry:read": Grant read-only access
              to application registry data
            "applicationregistry:write": Grant write access
              to application registry data
        password:
          tokenUrl: "https://example.com/oauth/token"
          scopes:
            "discovery:read": Grant read-only access to
              discovery data
            "applicationprofile:read": Grant read-only
              access to Application Profile data
            "applicationprofile:write": Grant write access
              to Application Profile data
            "applicationregistry:read": Grant read-only
              access to application registry data
            "applicationregistry:write": Grant write
              access to application registry data
        clientCredentials:
          tokenUrl: "https://example.com/oauth/token"
          scopes:
            "discovery:read": Grant read-only access to
              discovery data
            "applicationprofile:read": Grant read-only
              access to Application Profile data
            "applicationprofile:write": Grant write access
              to Application Profile data
            "applicationregistry:read": Grant read-only access
              to application registry data
            "applicationregistry:write": Grant write access
              to application registry data

  ######################################################
  #  RESOURCES
  #######################################################
  schemas:
    ResourcesApplicationProfile:
      type: object
      description: applicationprofileResource//added desc
      properties:
        clientType:
          type: string
          enum:
            - V2X
            - ComputerVision
            - MachineLearning
            - IoT
            - Gaming
            - AR
            - VR
            - Analytics
            - Robotics
          description: The category of application client.
        preferredEdgeProvider:
          type: string
          description: identity of the preferred Edge
            Computing application Provider
          example: aws, azure
        networkResources:
          $ref: "#/components/schemas/NetworkQualityThresholds"
        computeResources:
          type: string
          description: compute resource name or properties
          additionalProperties:
            $ref: "#/components/schemas/TypesComputeResources"
        properties:
          type: object
          description: Resources//added desc
          properties:
            type:
              type: string
            data:
              type: object
      required:
        - networkResources
      additionalProperties: false
    NetworkQualityThresholds:
      description: //todo
      type: object
      properties:
        packetDelayBudget:
          $ref: "#/components/schemas/packetDelayBudget"
        targetMinDownstreamRate:
          $ref: "#/components/schemas/targetMinDownstreamRate"
        targetMinUpstreamRate:
          $ref: "#/components/schemas/targetMinUpstreamRate"
        packetlossErrorRate:
          $ref: "#/components/schemas/packetErrorLossRate"
        jitter:
          $ref: "#/components/schemas/jitter"

    applicationProfile:
      description: information about the application
        which are required for decision making
      type: object
      properties:
        applicationProfileId:
          type: string
          format: uuid
        ResourcesApplicationProfile:
          $ref: "#/components/schemas/ResourcesApplicationProfile"

    packetDelayBudget:
      description: |
        The packet delay budget is the maximum allowable
        one-way latency between the customer's device
        and the gateway from the operator's network to
        other networks. By limiting the delay, the network
        can provide an acceptable level of performance for
        various applications, such as voice calls,
        video streaming, and data.
        The end-to-end or round trip latency will be about
        two times this value plus the latency not controlled
        by the operator
      allOf:
        - $ref: "#/components/schemas/Duration"

    packetErrorLossRate:
      type: integer
      description: |
        The exponential power of the allowable error
        loss rate 10^(-N).For instance 3 would be an error
        loss rate of 10 to the power of -3 (0.001)
        For 5G network the 3GPP specification TS 23.203
        defines the packet error loss rate QCI attribute. It
        describes the Quality of application (QoS) Class
        Identifier (QCI) parameters used to
        differentiate traffic classes in mobile networks,
        ensuring appropriate resource
        allocation and performance for various applications.
        The packet error loss rate is one of the QCI attributes,
        providing information on the
        acceptable packet loss rate for a specific traffic class.
        This attribute helps maintain
        the desired performance level for applications like
        voice calls, video streaming, or data transfers
        within the 3GPP mobile network.
      format: int32
      minimum: 1
      maximum: 10
      example: 3

    jitter:
      description: |
        The jitter requirement aims to limit the
        maximum variation in round-trip packet delay
        for the 99th percentile of traffic, following
        ITU Y.1540 standards. It considers only acknowledged
        packets in a session, which are packets that receive
        a confirmation of receipt from the recipient (e.g.,
        using TCP). This requirement helps maintain consistent
        latency, essential for real-time applications
        such as VoIP, video calls, and gaming.
      allOf:
        - $ref: "#/components/schemas/Duration"

    targetMinDownstreamRate:
      description: |
        This is the target minimum downstream rate.
      allOf:
        - $ref: "#/components/schemas/Rate"

    targetMinUpstreamRate:
      description: |
        This is the target minimum upstream rate.
      allOf:
        - $ref: "#/components/schemas/Rate"

    Duration:
      type: object
      properties:
        value:
          type: integer
          example: 12
          format: int32
          minimum: 1
        unit:
          allOf:
            - $ref: "#/components/schemas/TimeUnitEnum"
            - example: Minutes
    TimeUnitEnum:
      type: string
      enum:
        - Days
        - Hours
        - Minutes
        - Seconds
        - Milliseconds
        - Microseconds
        - Nanoseconds

    Rate:
      type: object
      properties:
        value:
          type: integer
          example: 10
          format: int32
          minimum: 0
          maximum: 1024
        unit:
          $ref: "#/components/schemas/RateUnitEnum"

    RateUnitEnum:
      type: string
      enum:
        - bps
        - kbps
        - Mbps
        - Gbps
        - Tbps

    ResourcesEdgeHostedapplication:
      description: Edge hosted application represented
        by application Endpoint definition
      type: object
      properties:
        applicationEndpointsId:
          $ref: "#/components/schemas/TypesApplicationEndpointsId"
        applicationEndpoint:
          $ref: "#/components/schemas/ResourcesapplicationEndpoint"
        applicationServerProviderId:
          type: string
          description: Unique ID representing the Edge
            Application Provider
        ern:
          $ref: "#/components/schemas/TypesEdgeResource"
        applicationId:
          type: string
          description: Unique ID representing the Edge Application
        applicationDescription:
          type: string
          description: Description of the application Endpoint
          additionalProperties: false
        applicationProfileId:
          $ref: "#/components/schemas/TypesApplicationProfileId"
    ResourcesapplicationEndpoint:
      type: object
      description: applicationEndpoint//added desc
      properties:
        uri:
          type: string
          description: URI of application Endpoint if available
          format: uri
        fqdn:
          type: string
          description: FQDN of application Endpoint if available
        ipv4Address:
          type: string
          description: IPv4 Address of application Endpoint if available
          format: ipv4
        ipv6Address:
          type: string
          description: IPv6 Address of application Endpoint if available
          format: ipv6
        port:
          type: integer
          description: |
            Port information of application Endpoint if IPv4 or IPv6 is mentioned
      additionalProperties: false
    ResourcesMecPlatform:
      type: object
      description: Mecplatform application//added desc
      properties:
        edgeResourceName:
          $ref: "#/components/schemas/TypesEdgeResource"
        zoneId:
          $ref: "#/components/schemas/TypesZoneId"
        regionId:
          $ref: "#/components/schemas/TypesRegionId"
        status:
          description: Status of the MEC Platform (default is 'unknown')
          type: string
          enum:
            - active
            - inactive
            - unknown
          default: unknown
        properties:
          type: array
          description: properties//added desc
          items:
            type: object
            properties:
              type:
                type: string
              data:
                type: object
      additionalProperties: false

    ApplicationProfileId:
      type: string
      format: uuid
      description: reference id associated to application profile

    ErrorInfo:
      type: object
      description: Error information
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP status code returned along with this error response
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description

    ######################################################
    #  IDs
    #######################################################
    TypesEdgeResource:
      description: |
        An object defined by the application provider representing an edge resource within its network domain, such as a MEC Platform.  The string contains colon-separated metadata in the form   ern:<tsp-identifier>:<tsp-region>:<resource-type>:<resource-identifier>:<tsp-extensions>
      type: string
      additionalProperties: false
    TypesRegionId:
      description: |
        Unique identifier representing a region
      type: string
      additionalProperties: false
    TypesApplicationEndpointsId:
      description: |
        A system-defined string identifier representing one or more registered Application Endpoints.
      type: string
      format: uuid
      readOnly: true
      additionalProperties: false
    TypesApplicationProfileId:
      description: |
        Unique identifier for a Application Profile
      type: string
      readOnly: false
      additionalProperties: false
    TypesZoneId:
      description: |
        Unique identifier representing a zone
      type: string
      additionalProperties: false

    ######################################################
    #  TYPES
    #######################################################
    TypesComputeResources:
      type: object
      properties:
        GPU:
          type: object
          description: compute resources//added desc
          properties:
            minCoreClockMHz:
              type: integer
              description: Minimum Core Clock value in megahertz
            minMemoryClockMHz:
              type: integer
              description: Minimum Memory Clock value in megahertz
            minBandwidthGBs:
              type: integer
              description: Minimum GPU bandwidth in GB/s
            minTFLOPS:
              type: integer
              description: Minimum Floating Point Operations Per Second in Teraflops.
        minRAMGB:
          type: integer
          description: minimum RAM required in Gigabytes.
        minStorageGB:
          type: integer
          description: Minimum storgae requirement in Gigabytes
      description: Compute resources of a Application Profile
      additionalProperties: false
    TypesError:
      type: object
      description: types Error//added desc
      properties:
        code:
          type: string
          description: code //added desc
        message:
          type: string
          description: message //added desc

      required:
        - code
        - message
        - links
      additionalProperties: false
    TypesUeIdentityType:
      description: Type of User Equipment identifier used in `UEIdentity`.
      type: string
      enum:
        - IPAddress
        - MSISDN
        - IMEI
        - MDN
        - GPSI
    TypesUeIdentity:
      description: Identifier value for User Equipment. The type of identifier is defined by the 'UEIdentityType' parameter.
      type: string

  ######################################################
  #  PARAMETERS
  #######################################################
  parameters:
    applicationProfileId:
      name: applicationProfileId
      description: Application Profile identifier
      in: query
      required: false
      schema:
        type: string
    region:
      name: region
      description: MEC region ID
      in: query
      required: false
      schema:
        type: string
    applicationEndpointsId:
      name: applicationEndpointsIds
      description: applicationEndpointsId is a pointer to the Application Endpoints (IP address, FQDN etc.) previously registered for a given application.
      in: query
      required: true
      schema:
        type: array
        items:
          $ref: "#/components/schemas/TypesApplicationEndpointsId"
      style: pipeDelimited
      explode: false
    UEIdentityType:
      name: ueIdentityType
      description: Type of User Equipment identifier
        used in `UEIdentity`.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/TypesUeIdentityType"
    UEIdentity:
      name: ueIdentity
      description: Identifier value for User Equipment.
        The type of identifier is defined by the
        UEIdentityType parameter.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/TypesUeIdentity"

  ######################################################
  #  RESPONSES
  #######################################################
  responses:
    NoContent:
      description: HTTP 204 No Content
    BadRequest:
      description: HTTP 400 Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TypesError"
    NotFound:
      description: HTTP 404 The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TypesError"
    Unauthorized:
      description: HTTP 401 Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TypesError"
    Unexpected:
      description: HTTP 500 Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TypesError"
    Generic400:
      description: Invalid argument
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 400
            code: INVALID_ARGUMENT
            message: "Invalid argument"

    Generic401:
      description: Unauthenticated
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 401
            code: UNAUTHENTICATED
            message: "Authorization failed: ..."

    Generic403:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 403
            code: PERMISSION_DENIED
            message: "Operation not allowed: ..."

    Generic404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 404
            code: NOT_FOUND
            message: "The specified resource is not found"

    Generic409:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 409
            code: Conflict
            message: "There is conflict in the request"

    Generic500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 500
            code: INTERNAL
            message: "Internal server error"

    Generic503:
      description: application unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 503
            code: UNAVAILABLE
            message: "application unavailable"
