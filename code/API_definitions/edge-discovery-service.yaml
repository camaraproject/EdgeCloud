---
openapi: 3.0.3
############################################################################
#                                     API info                             #
############################################################################
info:
  contact:
    email: sp-edc@lists.camaraproject.org
  title: Edge Discovery API
  version: 0.9.2
  description: |
    # Introduction
    ---
    Use the Edge Discovery API for
    discovery of the most optimal edge cloud zone for a specific user as well as specific application instance the user is trying to connect to.

    ---
    # API Scope
    ---
    APIs defined in this version of the specification c
    an be categorized into the following areas:

  license:
    name: Apache-2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"

############################################################################
#                                     Security                             #
############################################################################
security:
  - oAuth2:
      - "edge:discovery:read"


############################################################################
#                                     Servers                              #
############################################################################
servers:
  - url: "http://localhost:{port}/v1"
    description: Local host API
    variables:
      port:
        enum:
          - "3333"
        default: "3333"
  - url: "https://edge.example.com:{port}/v1"
    description: Production API
    variables:
      port:
        enum:
          - "443"
          - "8443"
        default: "443"
  - url: "https://{region}.edge.example.com:{port}/v1"
    description: Production API for Regions
    variables:
      region:
        default: east
      port:
        enum:
          - "443"
          - "8443"
        default: "443"

############################################################################
#                                     Tags                                 #
############################################################################
tags:
  - name: Regions
    description: |
      Get all Region IDs and Names for edge cloud zones
  - name: Discovery
    description: |
      Discover the regions and zones in the edge cloud
      application, find optimal edge cloud zones for
      your deployed applications, and optimal
      Application Endpoints for your clients to connect to.
############################################################################
#                                     Paths                                #
############################################################################
paths:
  /regions:
    get:
      summary: Get all Region IDs and Names
      operationId: get-region-ids-and-names
      responses:
        '200':
          description: Returns Edge Cloud Regions
          content:
            application/json:
              schema:
                title: GetEdgeCloudRegionsResponse
                type: object
                properties:
                  edgeCloudRegions:
                    type: array
                    items:
                      $ref: "#/components/schemas/ResourcesEdgeCloudZones"
        '500':
          description: Internal server error
      tags:
        - Regions
      description: |
        Returns a list of all Edge Cloud Regions with their IDs and names.
        This information can be used to identify the regions where edge cloud zones are available.
  /edge-cloud-zones:
      post:
        operationId: get-edgeCloudZone
        parameters:
          - $ref: "#/components/parameters/applicationProfileId"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        responses:
          "200":
            description: returns optimal edge cloud zone matching query parameters
            content:
              application/json:
                schema:
                  title: GetEdgeCloudZoneResponse
                  type: object
                  properties:
                    edgeCloudZones:
                      type: array
                      items:
                        $ref: "#/components/schemas/ResourcesEdgeCloudZones"
          "401":
            $ref: "#/components/responses/Unauthorized"
          default:
            $ref: "#/components/responses/Unexpected"
        tags:
          - Discovery
        summary: Discover optimal edge cloud zones for deployed applications
        description: Returns a list of optimal edge cloud zones where you can register your deployed application. You can choose to search without passing any of the inputs parameters or a combination of Application Profile, Region or UEIdentity.
  /application-endpoints:
      post:
        operationId: get-application-endpoints
        parameters:
        - $ref: "#/components/parameters/region"
        - $ref: "#/components/parameters/applicationEndpointsId"
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        responses:
          '200':
            description: Find optimal Application Endpoints for clients to connect to
            content:
              application/json:
                schema:
                  title: GetapplicationEndpointsResponse
                  type: object
                  properties:
                    applicationEndpoints:
                      type: array
                      items:
                        $ref: "#/components/schemas/EdgeHostedapplication"
          "401":
            $ref: "#/components/responses/Unauthorized"
          default:
            $ref: "#/components/responses/Unexpected"
        tags:
        - Discovery
        summary: Find optimal Application Endpoints for clients to connect to
        description: Returns a list of optimal Application Endpoints that client devices can connect to. You can search based on Application Profile, Region,subscriber density or UEIdentity.

components:
  ######################################################
  #  OAUTH
  #######################################################
  securitySchemes:
    oAuth2:
      type: oauth2
      description: "This API uses OAuth 2 with the
        implicit, password and client credentials grant flow"
      flows:
        implicit:
          authorizationUrl: "https://example.com/oauth/authorize"
          scopes:
            "discovery:read": Grant read-only access to
              discovery data
            "applicationprofile:read": Grant read-only
              access to Application Profile data
            "applicationprofile:write": Grant write access
              to Application Profile data
            "applicationregistry:read": Grant read-only access
              to application registry data
            "applicationregistry:write": Grant write access
              to application registry data
        password:
          tokenUrl: "https://example.com/oauth/token"
          scopes:
            "discovery:read": Grant read-only access to
              discovery data
            "applicationprofile:read": Grant read-only
              access to Application Profile data
            "applicationprofile:write": Grant write access
              to Application Profile data
            "applicationregistry:read": Grant read-only
              access to application registry data
            "applicationregistry:write": Grant write
              access to application registry data
        clientCredentials:
          tokenUrl: "https://example.com/oauth/token"
          scopes:
            "discovery:read": Grant read-only access to
              discovery data
            "applicationprofile:read": Grant read-only
              access to Application Profile data
            "applicationprofile:write": Grant write access
              to Application Profile data
            "applicationregistry:read": Grant read-only access
              to application registry data
            "applicationregistry:write": Grant write access
              to application registry data

  ######################################################
  #  RESOURCES
  #######################################################
  schemas:
    applicationProfile:
      description: information about the application
        which are required for decision making
      type: object
      properties:
        applicationProfileId:
          type: string
          format: uuid

    EdgeHostedapplication:
      description: Edge hosted application represented
        by application Endpoint definition
      type: object
      properties:
        applicationEndpointsId:
          $ref: "#/components/schemas/TypesApplicationEndpointsId"
        applicationEndpoint:
          $ref: "#/components/schemas/ResourcesapplicationEndpoint"
        applicationServerProviderName:
          type: string
          description: Unique ID representing the Edge
            Application Provider
        applicationId:
          type: string
          description: Unique ID representing the Edge Application
        applicationDescription:
          type: string
          description: Description of the application Endpoint
          additionalProperties: false
        applicationProfileId:
          $ref: "#/components/schemas/TypesApplicationProfileId"
        edgeCloudZoneId:
          $ref: "#/components/schemas/EdgeCloudZoneId"
        edgeCloudZoneName:
          $ref: "#/components/schemas/EdgeCloudZoneName"
        edgeCloudProvider:
          $ref: "#/components/schemas/EdgeCloudProvider"
        edgeCloudRegionId:
          $ref: "#/components/schemas/EdgeCloudRegionName"
    ResourcesapplicationEndpoint:
      type: object
      description: applicationEndpoint//added desc
      properties:
        uri:
          type: string
          description: URI of application Endpoint if available
          format: uri
        fqdn:
          type: string
          description: FQDN of application Endpoint if available
        ipv4Address:
          type: string
          description: IPv4 Address of application Endpoint if available
          format: ipv4
        ipv6Address:
          type: string
          description: IPv6 Address of application Endpoint if available
          format: ipv6
        port:
          type: integer
          description: |
            Port information of application Endpoint
            if IPv4 or IPv6 is mentioned
      additionalProperties: false

    ResourcesEdgeCloudZones:
      type: object
      description: Edge cloud zone application//added desc
      properties:
        edgeCloudZoneId:
          $ref: "#/components/schemas/EdgeCloudZoneId"
        edgeCloudZoneName:
          $ref: "#/components/schemas/EdgeCloudZoneName"
        edgeCloudProvider:
          $ref: "#/components/schemas/EdgeCloudProvider"
        edgeCloudRegionId:
          $ref: "#/components/schemas/EdgeCloudRegionName"
        status:
          description: Status of the Edge cloud zone (default is 'unknown')
          type: string
          enum:
            - active
            - inactive
            - unknown
          default: unknown
      additionalProperties: false

    EdgeCloudRegions:
      type: object
      description: A region with its ID and name
      properties:
        edgeCloudRegionId:
          type: string
          description: The ID of the region
        edgeCloudRegionName:
          type: string
          description: The name of the region

    ApplicationProfileId:
      type: string
      format: uuid
      description: reference id associated to application profile

    EdgeCloudZoneId:
      description: |
        Operator-issued UUID for the Edge Cloud Zone.
      type: string
      format: uuid
      additionalProperties: false

    EdgeCloudZoneName:
      description: |
        Edge Cloud Zone Name - the common name for the Edge Cloud Zone.
      type: string
      additionalProperties: false

    EdgeCloudProvider:
      description: |
        The company name of the Edge Cloud Zone provider.
      type: string

    EdgeCloudRegionName:
      description: |
        region of the Edge Cloud Zone.
      type: string

    ErrorInfo:
      type: object
      description: Error information
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP status code returned along with this error response
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description

    TypesEdgeResource:
      description: |
        An object defined by the application provider
        representing an edge resource within its network
        domain, such as an Edge cloud zone.
      type: string
      additionalProperties: false

    TypesRegionId:
      description: |
        Unique identifier representing a region
      type: string
      additionalProperties: false
    TypesApplicationEndpointsId:
      description: |
        A system-defined string identifier representing
        one or more registered Application Endpoints.
      type: string
      format: uuid
      readOnly: true
      additionalProperties: false
    TypesApplicationProfileId:
      description: |
        Unique identifier for a Application Profile
      type: string
      readOnly: false
      additionalProperties: false
    TypesEdgeZoneId:
      description: |
        Unique identifier representing a zone
      type: string
      additionalProperties: false

    Device:
      description: |
        End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.

        The developer can choose to provide the below specified device identifiers:

        * `ipv4Address`
        * `ipv6Address`
        * `phoneNumber`
        * `networkAccessIdentifier`

        NOTE: the MNO might support only a subset of these options. The API invoker can provide multiple identifiers to be compatible across different MNOs. In this case the identifiers MUST belong to the same device.
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
        networkAccessIdentifier:
          $ref: "#/components/schemas/NetworkAccessIdentifier"
        ipv4Address:
          $ref: "#/components/schemas/DeviceIpv4Addr"
        ipv6Address:
          $ref: "#/components/schemas/DeviceIpv6Address"
      minProperties: 1

    PhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: '^\+[1-9][0-9]{4,14}$'
      example: "+123456789"

    NetworkAccessIdentifier:
      description: A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.
      type: string
      example: "123456789@domain.com"

    DeviceIpv4Addr:
      type: object
      description: |
        The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).

        If the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.

        If NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)

        In all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.
      properties:
        publicAddress:
          $ref: "#/components/schemas/SingleIpv4Addr"
        privateAddress:
          $ref: "#/components/schemas/SingleIpv4Addr"
        publicPort:
          $ref: "#/components/schemas/Port"
      anyOf:
        - required: [publicAddress, privateAddress]
        - required: [publicAddress, publicPort]
      example:
        publicAddress: "84.125.93.10"
        publicPort: 59765

    SingleIpv4Addr:
      description: A single IPv4 address with no subnet mask
      type: string
      format: ipv4
      example: "84.125.93.10"

    Port:
      description: TCP or UDP port number
      type: integer
      minimum: 0
      maximum: 65535

    DeviceIpv6Address:
      description: |
        The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).
      type: string
      format: ipv6
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344

    TypesComputeResources:
      type: object
      properties:
        GPU:
          type: object
          description: compute resources//added desc
          properties:
            minCoreClockMHz:
              type: integer
              description: Minimum Core Clock value in megahertz
            minMemoryClockMHz:
              type: integer
              description: Minimum Memory Clock value in megahertz
            minBandwidthGBs:
              type: integer
              description: Minimum GPU bandwidth in GB/s
            minTFLOPS:
              type: integer
              description: Minimum Floating Point Operations
                Per Second in Teraflops.
        minRAMGB:
          type: integer
          description: minimum RAM required in Gigabytes.
        minStorageGB:
          type: integer
          description: Minimum storgae requirement in Gigabytes
      description: Compute resources of a Application Profile
      additionalProperties: false
    TypesError:
      type: object
      description: types Error//added desc
      properties:
        code:
          type: string
          description: code //added desc
        message:
          type: string
          description: message //added desc

      required:
        - code
        - message
        - links
      additionalProperties: false
    TypesUeIdentityType:
      description: Type of User Equipment identifier used in `UEIdentity`.
      type: string
      enum:
        - IPAddress
        - MSISDN
        - IMEI
        - MDN
        - GPSI
    TypesUeIdentity:
      description: Identifier value for User Equipment.
        The type of identifier is defined by the
        'UEIdentityType' parameter.
      type: string

  ######################################################
  #  PARAMETERS
  #######################################################
  parameters:
    applicationProfileId:
      name: applicationProfileId
      description: Application Profile identifier
      in: query
      required: false
      schema:
        type: string
    region:
      name: region
      description: Edge Cloud region ID
      in: query
      required: false
      schema:
        type: string
    applicationEndpointsId:
      name: applicationEndpointsIds
      description: applicationEndpointsId is a pointer
        to the Application Endpoints (IP address,
        FQDN etc.) previously registered for a
        given application.
      in: query
      required: true
      schema:
        type: array
        items:
          $ref: "#/components/schemas/TypesApplicationEndpointsId"
      style: pipeDelimited
      explode: false
    UEIdentityType:
      name: ueIdentityType
      description: Type of User Equipment identifier
        used in `UEIdentity`.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/TypesUeIdentityType"
    UEIdentity:
      name: ueIdentity
      description: Identifier value for User Equipment.
        The type of identifier is defined by the
        UEIdentityType parameter.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/TypesUeIdentity"

  ######################################################
  #  RESPONSES
  #######################################################
  responses:
    NoContent:
      description: HTTP 204 No Content
    BadRequest:
      description: HTTP 400 Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TypesError"
    NotFound:
      description: HTTP 404 The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TypesError"
    Unauthorized:
      description: HTTP 401 Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TypesError"
    Unexpected:
      description: HTTP 500 Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TypesError"
    Generic400:
      description: Invalid argument
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 400
            code: INVALID_ARGUMENT
            message: "Invalid argument"

    Generic401:
      description: Unauthenticated
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 401
            code: UNAUTHENTICATED
            message: "Authorization failed: ..."

    Generic403:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 403
            code: PERMISSION_DENIED
            message: "Operation not allowed: ..."

    Generic404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 404
            code: NOT_FOUND
            message: "The specified resource is not found"

    Generic409:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 409
            code: Conflict
            message: "There is conflict in the request"

    Generic500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 500
            code: INTERNAL
            message: "Internal server error"

    Generic503:
      description: application unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          example:
            status: 503
            code: UNAVAILABLE
            message: "application unavailable"