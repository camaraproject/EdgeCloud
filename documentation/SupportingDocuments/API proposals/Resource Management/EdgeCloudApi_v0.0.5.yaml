openapi: 3.0.3
info:
  version: '1.0.0'
  title: 'MEC Edge Cloud API'
  description:  |
    # Introduction
    ---
    Use the MEC Edge Cloud API for artifact managment, application management,  application instance LCM  and application provider resource  
    management. 
   
    ---
    # API Scope
    
    ---
    APIs defined in this version of the specification can be categorized into the following areas:
    * __Application Provider Resource Management__ - Static resource reservation for an application provider
    * __Application Artifacts Management__ - Management of application descriptors, binaries, charts and packages 
    * __Application Onboarding Management__ - Register, retrieve, update and remove applications
    * __Application Instance Lifecycle Management__ - Create, update, retrieve and terminate application instances
    
    ---
    # Definitions
    ---
    This section provides definitions of terminologies commonly referred to throughout the API descriptions.

    * __Application Provider__ - An application developer, onboarding his/her edge application on operator platform (MEC).    
    * __Resource__ - Compute, networking and storage resources.
    * __Artifact__ - Descriptor, binary image, charts or any other package assosiated with the application.
    * __Edge Application__ - Application designed to run on MEC edge cloud  
    * __FileId__ - An OP defined string identifier representing a certain application image uploaded by an application provider
    * __Flavor__ - A group of compute, network and storage resources that can be requested or granted as a single unit
    * __FlavorIdentifier__ - An OP defined string identifier representing a set of compute, storage  and networking resources
    * __Application Client__ - Client side of the application running on user device (mobile, tablet, AR/VR glasses, resberry Pie etc)
    * __Onboarding__ - Submitting an application to MEC platform 
    * __OperatorIdentfier__ - String identifier representing the owner of MEC platform. Owner could  be an enterprise, a TSP or some other organization
    * __Instance__ - Application process running on an edge
    * __ZoneIdentifier__ - An OP defined string identifier representing a certain geographical or logical area where edge resources and services are provided
     
    ---
    # API Operations
    ---  
    
    __Application Provider Resource Management__
    * __reserveComputeResources__  Reserves compute, network and storage resources on specified zones for an application provider
    * __updateResourceReservation__  Updates (add, remove or change amount) resources reserved for an application provider
    * __viewReservedResources__  Retrieves resources reserved for an application provider
    * __removeReservedResources__ Remove resources reserved for an application provider
    
    __Application Artifacts Management__
    * __onboardArtifact__  Submits an artifact to operator platform
    * __removeArtifact__  Removes an artifact from operator platform
    * __viewArtifact__  Retrieves an artifact details
    * __uploadFile__ Upload application binaries to operator platform
    * __removeFile__  Removes application binaries from operator platform
    * __viewFileInfo__  Retrieves details about binaries assosiated with an application
    
    __Application Onboarding Management__
    * __onboardApplication__ - Submits an application details to an OP. Based on the details provided,  OP shall do bookkeeping, resource validation and other pre-deployment operations. 
    * __updateApplication__ - Updates an OP about changes in  application compute resource requirements, QOS Profile, associated descriptor or change in assosiated components
    * __removeApplication__ - Removes an application from an OP
    * __viewApplication__ - Retrieves application details from an OP
    * __onboardExistingAppNewZones__ - Make an application available on new additional zones
    * __lockUnlockApplicationZone__ - Forbid or permit instantiation of application on a zone

    __Application Instance Lifecycle Management__
    * __instantiateApplication__ - Submits an application details to an OP. Based on the details provided,  OP shall do bookkeeping, resource validation and other pre-deployment operations. 
    * __viewApplicationInstance__ - Retrieves details of an application instance running on a zone
    * __removeApplication__ - Removes an application instance from an OP
    * __listApplicationInstances__ - List all instances and thier current states deployed across all zones

    __Edge Cloud Zone Management__
    * __listAvailableZones__ - Retrieves details of all zones available to app provider for his/her application deployment. Application provider are also allowed to pre-reserve compute resources on these zones

    __Application Provider Identity Management__    
    * __registerAppProvider__ - Registers an application provider with OP
    * __deregisterAppProvider__ - Deregisters an application provider with OP   
    * __viewAppProviderIdentity__ - Retrieves an application provider identity details.     
    
    @All rights reserved.

  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
    
externalDocs:
  description: MEC Edge cloud NBI APIs v0.1
  url: 'http://www.xxxx.com'
  
servers:
  - url: '{apiRoot}/operatorplatform/v1'
    variables:
      apiRoot:
        default: https://operatorplatform.com
        
security:
  - oAuth2ClientCredentials: 
    - nbi-mgmt

components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows: 
        clientCredentials: 
          tokenUrl: '/oauth2/token'
          scopes:
            nbi-mgmt: Access to the federation APIs
            
  schemas:
    AppIdentifier:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
      description: Identfier used to refer to an application. This idenfier is globally unique so that application can be identified uniquely across different OPs.
      
    AppProviderId:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
      description: UserId of the app provider.  Identifier is relevant only in context of this federation.
 
    ArtifactId:
      type: string
      format: uuid
      description: A globally unique identifier assosiated with the artifact. Originating OP generates this identifier when artifact is submitted over NBI.
      
    CountryCode:
      type: string
      description: "ISO 3166-1 Alpha-2 code for the country of Partner operator"
      pattern: ^[A-Z]{2}$
    
    CPUArchType:
          type: string
          enum:
            - ISA_X86_64
            - ISA_ARM_64
          description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc. 


    FlavorIdentifier:
      type: integer
      format: int32
      description: flavor identifier. Should correponds to flavors indicated by Partner OP for the corresponding zone.
 
    FileId:
      type: string
      format: uuid
      description: A globally unique identifier assosiated with the image file. Originating OP generates this identifier when file is uploaded over NBI.
      
    Fqdn:
      type: string
      
    GeoLocation:
      type: string
      description: "Latitude, Longitude as decimal fraction upto 4 digit precision"
      pattern: ^([-+]?)([\d]{1,2})(((\.)(\d+)(,)))(\s*)(([-+]?)([\d]{1,3})((\.)(\d+))?)$  
          
    InstanceIdentifier:
      type: string
      pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$      
      description: Unique identifier generated by the partner OP to identify an instance of the application on a specific zone. 
    
    InstanceState:
      type: string
      enum: 
        - PENDING
        - READY
        - FAILED
        - TERMINATING
      description: Running status of the application instance.
    
    Ipv4Addr:
      type: string
      pattern: '^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$'
      example: '198.51.100.1'
      
    Ipv6Addr:
      type: string
      allOf:
        - pattern: '^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))$'
        - pattern: '^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))$'
      example: '2001:db8:85a3::8a2e:370:7334' 
    
    OperatorIdentifier:
      type: string
      maxLength: 64
      minLength: 16
      description: String identifier of the operator owning the MEC platform.
    
    PoolId:
      type: string
      pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$      
      description: OP defined Identifier for the pool reserved for the ISV.  It should be unique with an OP.    
    
    Port:
      type: integer
      minimum: 0      
    
    Uri:
      type: string
      
    Version:
      type: string
      pattern:  ^(\d{1,2}\.)?(\d{1,2}\.)?(\d{1,2})$
      description: Versioning info in the format major.minor.patch
    
    ZoneIdentifier:         
      type: string
      pattern: '^[A-Fa-f0-9]*$'
      description:  Human readable name of the zone.
    

                                       
#
# STRUCTURED DATA TYPES
#                                        
    AppInstanceList:  
      type: object
      required:
        - zoneId
        - appInstanceInfo
      properties:
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier'     
        appInstanceInfo:
          type: array
          description: There could be multiple instance of the same application running on a zone
          items:
            type: object
            required:
              - appInstIdentifier
              - appInstanceState
            properties:
              appInstIdentifier:
                $ref: '#/components/schemas/InstanceIdentifier'
              appInstanceState:
                $ref: '#/components/schemas/InstanceState'                          
          minItems: 1    
          
    ComputeResourceInfo:
      type: object
      required:
        - cpuArchType
        - numCPU
        - memory
        - diskStorage
      properties:
        cpuArchType:
          type: string
          enum:
            - ISA_X86_64
            - ISA_ARM_64
          description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc.
        numCPU:
          type: integer
          format: int32
          description: Number of available vCPUs.    
        memory:
          type: integer
          format: int64
          description: Amount of RAM  in mega bytes
        diskStorage:
          type: integer
          format: int32
          description: Amount of disk storage  in giga bytes for a given ISA type
        gpu:
          type: array
          items:
            $ref: '#/components/schemas/GpuInfo' 
        vpu:
          type: integer
          description: Number of Intel VPUs available for a given ISA type
        fpga:
          type: integer
          description: Number of FPGAs available for a given ISA type
        hugepages:
          type: array
          items:
            $ref: '#/components/schemas/HugePage'
        cpuExclusivity:
          type: boolean
          description: Support for exclusive CPUs
 
    Flavor:
      type: object
      required:
        - flavorId
        - cpuArchType
        - supportedOSTypes
        - numCPU
        - memorySize
        - storageSize
      properties:
        flavorId:
          type: integer
          format: int32
          description: An identifier to refer to this combination of compute resources. 
        cpuArchType:
          $ref: '#/components/schemas/CPUArchType'
        supportedOSTypes:
          description: A list of operating systems which this flavor configuration can support e.g., RHEL Linux, Ubuntu 18.04 LTS, MS Windows 2012 R2.
          type: array 
          items:
            $ref: '#/components/schemas/OSType'              
          minItems: 1
        numCPU:
          type: integer
          format: int32
          description: Number of available vCPUs
        memorySize:
          type: integer
          format: int32
          description: Amount of RAM  in mega bytes
        storageSize:
          type: integer
          format: int32
          description: Amount of disk storage  in giga bytes
        gpu:
          type: array
          items:
            $ref: '#/components/schemas/GpuInfo'
        vpu:
          type: integer
          description: Number of Intel VPUs available
        hugepages:
          type: array
          items:
            $ref: '#/components/schemas/HugePage'
        cpuExclusivity:
          type: boolean
          description: Support for exclusive CPUs
 
 
    GpuInfo:
      type: object
      required:
        - gpuVendorType
        - gpuModeName
        - gpuMemory
        - numGPU
      properties:
        gpuVendorType:
          type: string
          enum:
            - GPU_PROVIDER_NVIDIA
            - GPU_PROVIDER_AMD
          description: GPU vendor name e.g. NVIDIA, AMD etc.
          example: Nvidia
        gpuModeName:
          type: string
          description: Model name corresponding to vendorType may include info e.g. for NVIDIA, model name could be “Tesla M60”, “Tesla V100” etc.
        gpuMemory:
          type: integer
          description: GPU memory in mega bytes
        numGPU:
          type: integer
          description: Number of GPUs
   
    HugePage:
      type: object
      required:
        - pageSize
        - number
      properties:
        pageSize:
          type: string
          enum:
            - 2MB
            - 4MB
            - 1GB
          description: Size of hugepage
        number:
          type: integer
          description: Total number of hugepages     
 
    IdentityInfo:
      type: object
      required:
        - firstName
        - lastName
        - appProviderId
        - emailId
        - password
        - dateOfBirth
        - accountType
        - maxValidity
      properties:
        firstName:
          type: string
          pattern: ^[A-Za-z][A-Za-z]{7,32}$
          description: First name of the application provider
        lastName:
          type: string
          pattern: ^[A-Za-z][A-Za-z]{7,32}$
          description: First name of the application provider
        appProviderId:
          $ref:  '#/components/schemas/AppProviderId' 
        emailId:
          type: string
          pattern: ^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$
          description: Valid email address of the application provider
        password:
          type: string
          minLength: 8
          maxLength: 64
          description: Password for application provider account
        domain:
          type: string
          maxLength: 64
          description: Domain name fo the enterprise, if the application provider is assosiated with an enterprise
        companyName:
          type: string
          maxLength: 64
          description: Name fo the enterprise, if the application provider is assosiated with an enterprise
        dateOfBirth:
          type: string
          format: date
          description: Date of birth of the application provider
        accountType:
          type: string
          enum: 
            - NORMAL
            - PREMIUM
            - PRIVILEGED
            - ADMIN
          description: Type of role assosiated with the application provider. 
        maxValidity:
          type: string
          format: date
          description: Time in future when the account expires automatically
        
    InvalidParam:
      type: object
      properties:
        param:
          type: string
        reason:
          type: string
      required:
          - param      
    
    IsvReservedResourcesDetails:
      type: object
      required:
        - poolName
        - poolId            
        - requestedResources
        - grantedResources
        - availableResources
      properties:
        poolName:
          type: string
          pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$      
          description: ISV defined name of the resource pool.           
        poolId:
          $ref: '#/components/schemas/PoolId'                   
        requestedResources:
          type: array
          items:
            type: object
            required:
              - flavorId
              - count
            properties:                            
              flavorId:
                $ref: '#/components/schemas/FlavorIdentifier' 
              count:
                type: integer
                format: int32
                description: Total number of flavors  reserved
          minItems: 1
        grantedResources:
          type: array
          items:
            type: object
            required:
              - flavorId
              - count
            properties:                            
              flavorId:
                $ref: '#/components/schemas/FlavorIdentifier' 
              count:
                type: integer
                format: int32
                description: Total number of flavors  reserved
          minItems: 1      
        availableResources:
          type: array
          items:
            type: object
            required:
              - flavorId
              - count
            properties:                            
              flavorId:
                $ref: '#/components/schemas/FlavorIdentifier' 
              count:
                type: integer
                format: int32
                description: Total number of flavors  reserved
          minItems: 1      
        reserveDuration:
          $ref: '#/components/schemas/ResourceReservationDuration'     
        reservationTime:    
          type: string
          format: date-time
          description: Date and time when resources were reserved in UTC format
 
    OSType:
      type: object
      required:
        - architecture
        - distribution
        - version
        - license
      properties:
        architecture: 
          type: string
          enum:
            - x86_64
            - x86
          example: x86_64  
        distribution:
          type: string
          enum:
            - RHEL
            - UBUNTU
            - COREOS
            - FEDORA.
            - WINDOWS
        version:
          type: string
          enum:
            - OS_VERSION_UBUNTU_2204_LTS
            - OS_VERSION_RHEL_8
            - OS_VERSION_RHEL_7
            - OS_VERSION_ DEBIAN_11
            - OS_VERSION_COREOS_STABLE
            - OS_MS_WINDOWS_2012_R2
        license:
          type: string
          enum:
            - OS_LICENSE_TYPE_FREE
            - OS_LICENSE_TYPE_ON_DEMAND

    
    ProblemDetails:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        cause:
          type: string
        invalidParams:
          type: array
          items:
              $ref: '#/components/schemas/InvalidParam'
          minItems: 1

    ResourceReservationDuration:
      description: Time period for which resources are to be reserved starting from now
      type: object
      minProperties: 1
      properties:
        numOfDays:
          type: integer
          format: int32
          description: Number of days to be reserved
        numOfMonths:
          type: integer
          format: int32
          description: Number of months to be reserved
        numOfYears:
          type: integer
          format: int32
          description: Number of years to be reserved                       


    ServiceEndpoint:
      type: object
      required:
        - port
      anyOf:
        - required: 
            -  fqdn 
        - required: 
            - ipv4Addresses 
        - required: 
            - ipv6Addresses
      properties:
        port: 
          $ref: '#/components/schemas/Port'
        fqdn:
          $ref: '#/components/schemas/Fqdn'
        ipv4Addresses:
          type: array 
          items:
            $ref: '#/components/schemas/Ipv4Addr'
          minItems: 1
        ipv6Addresses:
          type: array
          items:
            $ref: '#/components/schemas/Ipv6Addr'
          minItems: 1                      
          
    ZoneDetails:            
      type: object
      required:
        - zoneId
        - geolocation
        - geographyDetails
        - PartnerOPZone
        - supportedFlavors
      properties:
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier' 
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        geographyDetails:
          type: string
          description:  Details about cities  or state covered by the edge. Details about the type of locality  for eg rural, urban, industrial etc. 
                               This information is defined in human readable form.
        operator:
          $ref: '#/components/schemas/OperatorIdentifier'
        opCountry:
          $ref: '#/components/schemas/CountryCode'
        PartnerOPZone:
          type: boolean
          description: If the zone belongs to a partner OP
          default: false
        supportedFlavors:
          description: List of all flavors supported on this zone
          type: array
          items:
            $ref: '#/components/schemas/Flavor'  
          minItems: 1
                                        
#
# HTTP responses
#                                        
  responses:
    '400':
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'     
    '401':
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '404':
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '409':
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '412':
      description: Precondition Failed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '422':
      description: Unprocessable Entity
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '500':
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '501':
      description: Not Implemented
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '503':
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '520':
      description: Web Server Returned an Unknown Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    default:
        description: Generic Error  

      


paths:  
 
  /isv/resource/appProvider/{appProviderId}:
    post:
      summary: Reserves resources (compute, network and storage)  on  OP zones.
                       ISVs registered with home OP reserves resurces on  OP zones.
      operationId:  reserveComputeResources
      tags:  
        - Application Provider Resource Management
      parameters:
        - name: appProviderId
          in: path
          required: true
          schema:
            $ref:  '#/components/schemas/AppProviderId'  
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - zoneId
                  - resRequest
                properties:
                  zoneId:
                    $ref: '#/components/schemas/ZoneIdentifier'   
                  operator:
                    $ref: '#/components/schemas/OperatorIdentifier'     
                  opCountry:
                    $ref: '#/components/schemas/CountryCode'    
                  resRequest:
                    description: Compute flavors to be reserved and thier time duration and zone information
                    type: array
                    items:
                      type: object
                      required:
                        - poolName
                        - flavors
                        - reserveDuration
                      properties:
                        poolName:
                          type: string
                          pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$      
                          description: ISV defined name of the resource pool.     
                        flavors:
                          type: array
                          items:
                            type: object
                            required:
                              - flavorId
                              - numFlavor
                            properties:
                              flavorId:
                                $ref: '#/components/schemas/FlavorIdentifier' 
                              numFlavor:
                                type: integer
                                format: int32
                                description: Total number of flavors to be reserved
                              minNumOfFlavors:
                                type: integer
                                format: int32
                                description: If specified, indicate the minimum numbers of flavors to be reserved up to maximum as given in “count” member. 
                                                    If partner OP cannot reserve the minimum number of flavors, then the request shall fail.
                          minItems: 1
                        reserveDuration:
                          $ref: '#/components/schemas/ResourceReservationDuration'      
                    minItems: 1
              minItems: 1      
      responses:       
        '200':
          description:  ISV Resource reservation request accepted
          content: 
           application/json:
             schema:         
               type: object
               required:
                 - poolId
               properties:        
                 poolId:
                   $ref: '#/components/schemas/PoolId'                   
        
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 
 
    get:
      summary: Retrieves the resource pool reserved by an ISV
      operationId: viewReservedResources
      tags:  
        - Application Provider Resource Management
      parameters:
        - name: appProviderId    
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppProviderId'                           
      responses:
        '200':
          description: Reserved Resources Details 
          content: 
            application/json:
              schema:      
                type: array
                items:
                  type: object
                  required:
                  - zoneId
                  - resources
                  properties:
                    zoneId:
                      $ref: '#/components/schemas/ZoneIdentifier'   
                    resources:
                      type: array
                      items:
                        $ref: '#/components/schemas/IsvReservedResourcesDetails' 
                      minItems: 1
                minItems: 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'           
 
  

    patch:
      summary: Updates resources reserved for a pool by an ISV
      operationId: updateResourceReservation
      tags:  
        - Application Provider Resource Management
      parameters: 
        - name: appProviderId    
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppProviderId'   
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - zoneId
                  - reservedPools
                properties:
                  zoneId:
                    $ref: '#/components/schemas/ZoneIdentifier' 
                  reservedPools:
                    type: array
                    items:
                      type: object
                      required:
                        - poolId
                        - updates
                      properties:
                        poolId:
                          $ref: '#/components/schemas/PoolId'  
                        updates:                                                
                          type: array
                          items:
                            type: object                
                            required:
                              - updateType
                              - flavorId
                              - count
                            properties:
                              updateType:
                                type: string
                                enum:
                                  - ADD
                                  - REMOVE
                                  - DURATION
                                description: Specify if resource corresponding this flavor needs to added or removed. 
                                                    Field 'count' gives the final total no of such flavors that should be reserved.  count 0 means remove all the resources.
                              flavorId:
                                $ref: '#/components/schemas/FlavorIdentifier'    
                              count:
                                type: integer
                                format: int32
                                description: Total number of flavors to be reserved
                              reserveDuration:
                                $ref: '#/components/schemas/ResourceReservationDuration'   
                          minItems: 1
                    minItems: 1
              minItems: 1        
      responses:
        '200':
          description: Resource pool updated
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'       

  /isv/resource/appProvider/{appProviderId}/pool/{poolId}:
    delete:
      summary: Deletes the resource pool reserved by an ISV
      operationId: removeResourceReservation
      tags:  
        - Application Provider Resource Management
      parameters:  
        -   name: appProviderId    
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/AppProviderId'              
        -   name: poolId    
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/PoolId'                     
      responses:
        '200':
          description: Resource pool deleted   
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'
            
 
 
  /artifact:
    post:
      summary: Uploads application artifact  on an OP. 
                       Artifact is a zip file containing  scripts and/or packaging files like Terraform or Helm which are required to create an instance of an application.
      operationId: onboardArtifact
      tags:  
        - Application Artifacts Management
      requestBody:
        description: An application can consist of multiple components. App providers are allowed to define seperate artifacts for each component  
                            or  they could define a consolidated artifact at application level. 
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - appProviderId
                - artifactName
                - artifactVersionInfo
                - artifactVirtType
                - artifactFileName
                - artifactFileFormat
                - artifactDescriptorType
              oneOf:
                - required:
                  - artifactRepoLocation
                - required:
                  - componentSpec
                - required:
                  - artifactFile
              properties: 
                appProviderId:
                  $ref:  '#/components/schemas/AppProviderId'
                artifactName:
                  type: string
                  pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
                  description: Name of the artifact.    
                artifactVersionInfo:
                  type: string
                  pattern: ^(\d{1,2}\.)?(\d{1,2}\.)?(\d{1,2})$
                  description: Artifact version information        
                artifactDescription:
                    type: string
                    maxLength: 256
                    description: Brief description of the artifact by the application provider                  
                artifactVirtType:
                  type: string
                  enum:
                    - VM_TYPE
                    - CONTAINER_TYPE                    
                artifactFileName:
                  type: string
                  minLength:  8
                  maxLength: 32
                  description: Name of the file.  
                artifactFileFormat:
                  type: string
                  enum:
                    - WINZIP
                    - TAR
                    - TEXT
                    - TARGZ
                  description: Artifacts like Helm charts or Terraform scripts may need compressed format.
                artifactDescriptorType:
                  type: string
                  enum:
                    - HELM
                    - TERRAFORM
                    - ANSIBLE
                    - SHELL      
                    - COMPONENTSPEC
                  description: Type of descriptor present in the artifact.  App provider can either define either a HELM chart or a Terrform script or container spec.
                artifactRepoLocation:       
                  type: object
                  required:
                    - repoType
                    - repoURL
                  properties:
                    repoType:                 
                      type: string
                      enum:
                        - PRIVATEREPO
                        - PUBLICREPO
                        - UPLOAD
                      description: Artifact repository location. PUBLICREPO is used of public urls like github, helm repo etc, 
                                          PRIVATEREPO  is used for private repo managed by the application developer,
                                          UPLOAD is for the case when artifact is uploaded from MEC web portal.
                    repoURL:
                      $ref: '#/components/schemas/Uri'
                    userName:
                      type: string
                      pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
                      description:  Username to acces the artifact repository
                    password:
                      type: string      
                      description:  Password to acces the artifact repository
                    token:
                      type: string          
                      description:  Authorization token acces the artifact repository   
                componentSpec:
                    description: Details about compute, networking and storage requirements for each component of the application.  
                                        App provider should  define all information needed to instantiate the component. 
                                        If artifact is being defined at component level  this section should have information just about the component. 
                                        In case the artifact is being defined at application level  the section should provide details about all the components.
                    type: array
                    items:
                      type: object
                      required:
                        - componentName
                        - osType
                        - InstSetArch
                        - images
                        - numOfInstances
                        - restartPolicy
                        - networkResourceProfile
                        - computeResourceProfile
                      properties:
                        componentName: 
                          type: string
                          pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                          description: Must be a valid RFC 1035 label name.  Component name must be unique with an application
                        osType:
                          $ref: '#/components/schemas/OSType'
                        InstSetArch:
                          $ref: '#/components/schemas/CPUArchType'
                        imagesPath:
                          description: List of all images assosiated with the component. Images are uploaded or specified using UploadFile apis
                          type: array
                          items: 
                            $ref: '#/components/schemas/FileId' 
                          minItems: 1
                        numOfInstances:
                          type: integer
                          format: int32
                          description: Number of component instances to be launched. 
                        restartPolicy:
                          type: string
                          enum:
                            - RESTART_POLICY_ALWAYS
                            - RESTART_POLICY_NEVER
                          description: How the platform shall handle component failure
                        commandLineParams:
                          description: List of commands and arguments that shall be invoked when the component instance is created. This is valid only for 
                                              container  based deployment.
                          type: object
                          required:
                            - command
                          properties:
                            command:
                              type: array
                              items:
                                type: string
                              description: List of commands that application should invoke when an instance is created. 
                            commandArgs:
                              type: array
                              items:
                                type: string
                              description: List of arguments required by the command. 
                        exposedInterfaces:
                          description: Each application component exposes some ports either for external users or for inter component communication.
                                              Application provider is required to specify which ports are to be exposed and the type of traffic that will flow through these ports.

                          type: array
                          items:                          
                            type: object
                            required:
                              - interfaceId
                              - commProtocol
                              - commPort
                              - visibilityType
                              - network
                              - interfaceName
                            properties:
                              interfaceId:
                                type: string
                                description:  Each Port and corresponding traffic protocol exposed by the component is identified by a name. 
                                                     Application client on user device requires this to uniquley idenify the interface. 
                                pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                              commProtocol:
                                type: string
                                enum:
                                  - TCP
                                  - UDP
                                  - HTTP/HTTPS
                                description: Defines the IP transport communication protocol i.e., TCP, UDP or HTTP
                              commPort:
                                type: integer
                                format: int32
                                minimum: 1
                                maximum: 65535
                                description: Port number exposed by the component. OP may generate a dynamic port towards the UCs 
                                                    corresponding to this internal port and forward the client traffic from dynamic port to containerPort.
                              visibilityType:
                                description: Defines whether the interface is exposed to outer world or not i.e., external, or internal.
                                                    If this is set to "external", then it is  exposed to external applications otherwise it is exposed 
                                                    internally to edge application components within edge cloud. When exposed to external world, 
                                                    an external dynamic port is assigned for UC traffic and mapped to the internal containerPort
                                type: string
                                enum:
                                  - VISIBILITY_EXTERNAL
                                  - VISIBILITY_INTERNAL
                              network:
                                type: string
                                pattern: ^[A-Za-z][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                                description: Name of the network.  In case the application has to be assoisated with more then 1 network then app provider
                                                    must define the name of the network on which this interface has to be exposed.  This parameter is required only if 
                                                    the port has to be exposed on a specific network other then default.
                              InterfaceName:
                                type: string
                                pattern: ^[a-z][a-z0-9]{3}$
                                description:  Interface Name. Required only if application has to be attatched to a network other then default.
                          minItems: 1
                        computeResourceProfile:
                          $ref: '#/components/schemas/ComputeResourceInfo'
                        compEnvParams:
                          description: Environment variables are key value pairs that should be injected when component in instantiated
                          type: object
                          required:
                            - envVarName
                            - envValueType
                          properties:
                            envVarName: 
                              type: string
                              pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                              description: Name of environment variable
                            envValueType: 
                              type: string
                              enum:
                                - USER_DEFINED
                                - PLATFORM_DEFINED_DYNAMIC_PORT
                                - PLATFORM_DEFINED_DNS
                                - PLATFRM_DEFINED_IP
                            envVarValue:
                              type: string
                              pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                              description: Value to be assigned to environment variable
                            envVarSrc:
                              type: string
                              description:  Full path of parameter  from componentSpec that should be used to generate the environment value. 
                                                   Eg. networkResourceProfile[1]. interfaceId. 
                        persistentVolumes:
                          description: The ephemeral volume a container process may need to temporary store internal data
                          type: array
                          items:                          
                            type: object
                            required:
                              - volumeSize
                              - volumeMountPath
                              - volumeName
                            properties:
                              volumeSize:
                                type: string
                                enum: ["10Gi", "20Gi","50Gi", "100Gi"]
                                description: size of the volume given by user (10GB, 20GB, 50 GB or 100GB)
                              volumeMountPath:
                                type: string
                                description: Defines the mount path of the volume
                              volumeName:
                                type: string
                                description: Human readable name for the volume
                              ephemeralType:
                                type: boolean
                                default:  false
                                description: It indicates the ephemeral storage on the node and contents are not preserved if containers restarts
                              accessMode:
                                type: string
                                enum:
                                  - RW
                                  - RO
                                default: RW
                                description: Values are RW (read/write) and RO (read-only)l
                              sharingPolicy:
                                type: string
                                enum:
                                  - EXCLUSIVE
                                  - SHARED
                                default: EXCLUSIVE
                                description: Exclusive or Shared. If shared, then in case of multiple containers same volume will be shared across the containers.
                          minItems: 1
                    minItems: 1                    
                artifactFile:        
                  type: string
                  format: binary
                  description: Helm archive or Terrafom archive or container spec file.                  
        required: true
      responses:
        '200':
          description: Artifact uploaded successfully
          content: 
            application/json:
              schema:
                $ref:  '#/components/schemas/ArtifactId'            
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'        


  /artifact/{artifactId}:         
    get:
      summary: Retrieves details about an artifact.
      operationId: viewArtifact
      tags:
        - Application Artifacts Management
      parameters:
        -   name: artifactId    
            in: path
            required: true
            schema:
                $ref:  '#/components/schemas/ArtifactId'                 
      responses:
        '200':
          description: Artifact details
          content: 
            application/json:  
              schema:
                type: object
                required:
                  - artifactId
                  - appProviderId
                  - artifactName
                  - artifactVersionInfo
                  - artifactVirtType
                  - artifactFileName
                  - artifactFileFormat
                  - artifactDescriptorType
                  - artifactRepoLocation
                properties:
                  artifactId:
                    $ref:  '#/components/schemas/ArtifactId'         
                  appProviderId:
                    $ref:  '#/components/schemas/AppProviderId'
                  artifactName:
                    type: string
                    pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
                    description: Name of the artifact.    
                  artifactDescription:
                    type: string
                    maxLength: 256
                    description: Brief description of the artifact by the application provider
                  artifactVersionInfo:
                    type: string
                    pattern: ^(\d{1,2}\.)?(\d{1,2}\.)?(\d{1,2})$
                    description: Artifact version information             
                  artifactVirtType:
                    type: string
                    enum:
                      - VM_TYPE
                      - CONTAINER_TYPE                    
                  artifactFileName:
                    type: string
                    minLength:  8
                    maxLength: 32
                    description: Name of the file.  
                  artifactFileFormat:
                    type: string
                    enum:
                      - WINZIP
                      - TAR
                      - TEXT
                      - TARGZ
                    description: Artifacts like Helm charts or Terraform scripts may need compressed format.
                  artifactDescriptorType:
                    type: string
                    enum:
                      - HELM
                      - TERRAFORM
                      - ANSIBLE
                      - SHELL      
                      - COMPONENTSPEC
                    description: Type of descriptor present in the artifact.  App provider can either define either a HELM chart or a Terrform script or container spec.
                  artifactRepoLocation:       
                    type: object
                    required:
                      - repoType
                      - repoURL
                    properties:
                      repotype:                 
                        type:     string
                        enum:
                          - PRIVATEREPO
                          - PUBLICREPO
                          - UPLOAD
                        description: Artifact repository location. PUBLICREPO is used of public urls like github, helm repo etc, 
                                            PRIVATEREPO  is used for private repo managed by the application developer,
                                            UPLOAD is for the case when artifact is uploaded from MEC web portal.
                      repoURL:
                        $ref: '#/components/schemas/Uri'
                      userName:
                        type: string
                        pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
                        description:  Username to acces the artifact repository
                      password:
                        type: string      
                        description:  Password to acces the artifact repository
                      token:
                        type: string          
                        description:  Authorization token acces the artifact repository          
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'        
          
    delete:
      summary: Removes an artifact from an OP.
      operationId: RemoveArtifact
      tags:
        - Application Artifacts Management
      parameters:
        -   name: artifactId    
            in: path
            required: true
            schema:
                $ref:  '#/components/schemas/ArtifactId'                 
      responses:
        '200':
          description: Artifact deletion successful
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 

  /files:
    post:
      summary: Uploads an image file. Application provider uses this api to onboard an application image to an OP.
      operationId: uploadFile
      tags:
        - Application Artifacts Management       
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - appProviderId
                - fileName
                - fileVersionInfo
                - fileType
                - imgOSType
                - imgInsSetArch
              oneOf:
                - required:
                  - file
                - required:
                  - repolocation
              properties:
                appProviderId:
                  $ref:  '#/components/schemas/AppProviderId'
                fileName:
                  type: string
                  pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
                  description: Name of the image file.   App  provides secifies this name when image is uploaded on originating OP over NBI. 
                fileDescription:
                  type: string
                  minLength:  8
                  maxLength: 128
                  description: Brief description about the iamge file.
                fileVersionInfo:
                  type: string
                  pattern: ^(\d{1,2}\.)?(\d{1,2}\.)?(\d{1,2})$
                  description: File version information             
                fileType:
                  type: string
                  enum:
                    - QCOW2
                    - DOCKER    
                  description: Indicate if the file is Container image or VM image (QCOW2)                    
                imgOSType:
                  type: string
                  enum:
                    - LINUX
                    - WINDOWS
                    - SOLARIS
                  description: Base OS for the image. Currently only “Linux” is supported 
                imgInsSetArch:
                  type: string
                  enum:
                    - X86_64
                    - ARM64
                repolocation:
                  type: object
                  required:
                    - repoType
                    - repoURL
                  properties:
                    repotype:                 
                      type:     string
                      enum:
                        - PRIVATEREPO
                        - PUBLICREPO
                      description: Artifact repository location. PUBLICREPO is used of public urls like github, helm repo etc, 
                                            PRIVATEREPO  is used for private repo managed by the application developer,
                                            UPLOAD is for the case when artifact is uploaded from MEC web portal.
                    repoURL:
                      $ref: '#/components/schemas/Uri'
                    userName:
                      type: string
                      pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
                      description:  Username to acces the artifact repository
                    password:
                      type: string      
                      description:  Password to acces the artifact repository
                    token:
                      type: string          
                      description:  Authorization token acces the artifact repository    
                file:         
                  type: string
                  format: binary    
                  description: Binary image assosiated with an application component.                  
        required: true
      responses:       
        '200':
          description: File uploaded successfully
          content: 
            application/json:
              schema:          
                $ref:  '#/components/schemas/FileId'                   
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 
 
  /files/{fileId}:  
    delete:
      summary: Removes an image file from partner OP.
      operationId: RemoveFile
      tags:
        - Application Artifacts Management
      parameters:
        -   name: fileId    
            in: path
            required: true
            schema:
                $ref:  '#/components/schemas/FileId'                 
      responses:
        '200':
          description: Image deletion successful
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 


    get:
      summary: View an image file from partner OP.
      operationId: ViewFile
      tags:
        - Application Artifacts Management
      parameters:               
        -   name: fileId    
            in: path
            required: true
            schema:
                $ref:  '#/components/schemas/FileId'                 
      responses:
        '200':
          description: Image details
          content: 
           application/json:
            schema:         
             type: object
             required:
               - fileId
               - appProviderId
               - fileName
               - fileVersionInfo
               - fileType
               - imgOSType
               - imgInsSetArch
             oneOf:
               - required:
                 - file
               - required:
                 - repolocation
             properties:
               fileId:
                 $ref:  '#/components/schemas/FileId'         
               appProviderId:
                 $ref:  '#/components/schemas/AppProviderId'
               fileName:
                 type: string
                 pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
                 description: Name of the image file.   App  provides secifies this name when image is uploaded on originating OP over NBI. 
               fileDescription:
                 type: string
                 minLength:  8
                 maxLength: 128
                 description: Brief description about the iamge file.
               fileVersionInfo:
                 type: string
                 pattern: ^(\d{1,2}\.)?(\d{1,2}\.)?(\d{1,2})$
                 description: File version information             
               fileType:
                 type: string
                 enum:
                   - QCOW2
                   - DOCKER    
                 description: Indicate if the file is Container image or VM image (QCOW2)                    
               imgOSType:
                 type: string
                 enum:
                   - LINUX
                   - WINDOWS
                   - SOLARIS
                 description: Base OS for the image. Currently only “Linux” is supported 
               imgInsSetArch:
                 type: string
                 enum:
                   - X86_64
                   - ARM64          
           
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 
            
            
  /application/onboarding:
    post:
      summary: Submits an application details to a partner OP. Based on the details provided,  partner OP shall do bookkeeping, resource validation and other 
                       pre-deployment operations.       
      operationId: onboardApplication
      tags:
        - Application Onboarding Management     
      requestBody:
        required: true
        description: Details about application compute resource requirements, assosiated artifacts, QoS profile and regions where application shall be made available etc.
        content:
          application/json:
            schema:
              type: object
              required:
                - appProviderId
                - appDeploymentZones
                - appMetaData
                - appQoSProfile               
                - appComponentSpecs
              properties:    
                appProviderId:
                  $ref:  '#/components/schemas/AppProviderId'
                appDeploymentZones:
                  description: Details about partner OP zones where the application shloud be made available
                  type: array
                  items:
                    type: object
                    required:
                      - zoneId
                      - flavorId
                    properties:
                      zoneId:
                        $ref:  '#/components/schemas/ZoneIdentifier'
                      operator:
                        $ref:  '#/components/schemas/OperatorIdentifier'
                      opCountry:
                        $ref:  '#/components/schemas/CountryCode'
                      flavorId:
                        type: integer
                        format: int32
                        description: flavor identifier. Should correponds to flavors indicayed by Partner OP for the corresponding zone.
                      resourceConsumption:
                        type: string
                        enum:
                          - RESERVED_RES_SHALL
                          - RESERVED_RES_PREFER
                          - RESERVED_RES_AVOID
                          - RESERVED_RES_FORBID
                        default: RESERVED_RES_AVOID
                        description: Specifies if the application can be instantiated using  pre-reserved resource or not.  App provider can pre-reserve
                                            a pool of compute resoutrce on each zone.  'RESERVED_RES_SHALL' instruct OP to use only the pre-reserved resources.
                                            'RESERVED_RES_PREFER' instruct to first try using  pre-resrved resource, if none available go for non resrved resources.
                                            'RESERVED_RES_AVOID' instruct OP  not to use pre-reserved resource if possible, it is a choice depending upon circuminstances
                                            'RESERVED_RES_FORBID' instruct OP not to use pre-reserved resources.
                      resPool:
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$  
                        description: Resource pool to be used for application instantiation on this zone.  Valid only if IE 'resourceConsumption' is set to
                                            'RESERVED_RES_SHALL' or 'RESERVED_RES_PREFER'
                  minItems: 1
                appMetaData:
                  description: Application metadata details
                  type: object
                  required:
                    - appName
                    - version
                    - accessToken
                  properties:
                    appName: 
                      type: string
                      pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
                      description: Name of the application.   Application provider define a human readable name for the application 
                    version:
                      type: string
                      pattern: ^(\d{1,2}\.)?(\d{1,2}\.)?(\d{1,2})$
                      description: Version info of the application
                    appDescription:
                      type: string
                      minLength: 16
                      maxLength: 256
                      description: Brief application description provided by application provider
                    mobilitySupport:
                      type: boolean
                      default: false
                      description: Indicates if an application is sensitive to user mobility and can be relocated. Default is “FALSE”                       
                    accessToken:
                      type: string
                      pattern: ^[A-Za-z][A-Za-z0-9_]{31,63}$
                      description: An application Access key, to be used with UNI interface to authorize UCs Access to a given application
                    category:
                      type: string
                      enum:
                        - IOT
                        - HEALTH_CARE
                        - GAMING
                        - VIRTUAL_REALITY
                        - SOCIALIZING
                        - SURVELIANCE
                        - ENTERTAINMENT
                        - CONNECTIVITY
                        - PRODUCTIVITY
                        - SECURITY
                        - IDUSTRIAL
                        - EDUCATION
                        - OTHERS    
                      description:  Possible categorization of the application                        
                appQoSProfile:
                  description: Parameters corresponding to the performance constraints, tenancy details etc.
                  type: object
                  required:
                    - latencyConstraints
                  properties:
                    latencyConstraints:
                      type: string
                      enum:
                        - NONE
                        - LOW
                        - ULTRALOW
                      description: Latency requirements for the application. 
                                          Allowed values (non-standardized) are none, low and ultra low. Ultra Low may corresponds to range 15 - 30 msec, 
                                          Low correspond to range 30 - 50 msec. None means 51 and above
                    bandwidthRequired:
                      type: integer
                      format: int32
                      minimum: 1
                      description: Data transfer bandwidth requirement (minimum limit) for the application. It should in Mbits/sec
                    multiUserClients:
                      type: string
                      enum: 
                        - APP_TYPE_SINGLE_USER
                        - APP_TYPE_MULTI_USER
                      default: APP_TYPE_SINGLE_USER
                      description: Single user type application are designed to serve just one client. Multi user type application is designed to serve mulitple clients
                    noOfUsersPerAppInst:
                      type: integer
                      default: 1
                      description: Maximum no of clients that can connect to an instance of this application. This parameter is relevant only for application of type multi user
                    appProvisioning:
                      type: boolean
                      default: true                      
                      description: Define if application can be instantiated or not
                appComponentSpecs:
                  description: An application may consist of more then one component. Each component is assosiated with a descriptor and may exposes its services 
                                      externally or internally.  App providers are required to provide details about all these components, thier assosiated descriptors and thier 
                                      DNS names. 
                  type: array
                  items:
                    type: object
                    required:
                      - serviceNameNB
                      - componentname
                      - artifactId
                    properties:
                      serviceNameNB: 
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description:  Must be a valid RFC 1035 label name.  This defines the DNS name via which the component can be accessed over NBI. 
                                             Access via serviceNameNB is restricted on specific ports. Platform shall expose component access externally via this DNS name
                      serviceNameEW: 
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description:  Must be a valid RFC 1035 label name.  This defines the DNS name via which the component can be accessed via peer components.
                                             Access via serviceNameEW is open on all ports.   Platform shall not expose serviceNameEW externally outside edge.
                      componentName:
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description: Must be a valid RFC 1035 label name.  Component name must be unique with an application
                      artifactId:
                        $ref:  '#/components/schemas/ArtifactId'    
                  minItems: 1
      responses:       
        '202':
          description: Application onboarding request accepted
          content: 
            application/json:
              schema:         
               $ref:  '#/components/schemas/AppIdentifier'     
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 

  /application/onboarding/{appId}:
    get:
      summary: Retrieves application details from an OP
      operationId: viewApplication
      tags:
        - Application Onboarding Management
      parameters:      
        - name: appId
          in: path
          required: true
          schema:
           $ref:  '#/components/schemas/AppIdentifier'    
      responses:
        '200':
          description: Application details
          content: 
           application/json:
            schema:     
              type: object
              required:
                - appDeploymentZones
                - appMetaData
                - appQoSProfile               
                - appComponentSpecs
              properties:   
                appDeploymentZones:
                  description: Details about partner OP zones where the application shloud be made available
                  type: array
                  items:
                    type: object
                    required:
                      - zoneId
                      - flavorId
                      - onboardStatusInfo
                      - availability
                    properties:
                      zoneId:
                        $ref:  '#/components/schemas/ZoneIdentifier'
                      operator:
                        $ref:  '#/components/schemas/OperatorIdentifier'
                      opCountry:
                        $ref:  '#/components/schemas/CountryCode'
                      flavorId:
                        type: integer
                        format: int32
                        description: flavor identifier. Should correponds to flavors indicayed by Partner OP for the corresponding zone.
                      resourceConsumption:
                        type: string
                        enum:
                          - RESERVED_RES_SHALL
                          - RESERVED_RES_PREFER
                          - RESERVED_RES_AVOID
                          - RESERVED_RES_FORBID
                        default: RESERVED_RES_AVOID
                        description: Specifies if the application can be instantiated using  pre-reserved resource or not.  App provider can pre-reserve
                                            a pool of compute resoutrce on each zone.  'RESERVED_RES_SHALL' instruct OP to use only the pre-reserved resources.
                                            'RESERVED_RES_PREFER' instruct to first try using  pre-resrved resource, if none available go for non resrved resources.
                                            'RESERVED_RES_AVOID' instruct OP  not to use pre-reserved resource if possible, it is a choice depending upon circuminstances
                                            'RESERVED_RES_FORBID' instruct OP not to use pre-reserved resources.
                      resPool:
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$  
                        description: Resource pool to be used for application instantiation on this zone.  Valid only if IE 'resourceConsumption' is set to
                                            'RESERVED_RES_SHALL' or 'RESERVED_RES_PREFER'
                      onboardStatusInfo:
                        description: Defines change in application status. This change could be related to application itself or an application instance status
                        type: string
                        enum:
                          - PENDING
                          - ONBOARDED
                          - DEBOARDING
                          - REMOVED
                          - FAILED       
                      zoneLocked:
                        description: If the application is locked on the zone or not. Locked status prohibits creation of new instances of the application on this zone     
                        type: string
                        enum:
                          - LOCKED
                          - UNLOCKED
                  minItems: 1
                appMetaData:
                  description: Application metadata details
                  type: object
                  required:
                    - appName
                    - version
                    - accessToken
                  properties:
                    appName: 
                      type: string
                      pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
                      description: Name of the application.   Application provider define a human readable name for the application 
                    version:
                      type: string
                      pattern: ^(\d{1,2}\.)?(\d{1,2}\.)?(\d{1,2})$
                      description: Version info of the application
                    appDescription:
                      type: string
                      minLength: 16
                      maxLength: 256
                      description: Brief application description provided by application provider
                    mobilitySupport:
                      type: boolean
                      default: false
                      description: Indicates if an application is sensitive to user mobility and can be relocated. Default is “FALSE”                       
                    accessToken:
                      type: string
                      pattern: ^[A-Za-z][A-Za-z0-9_]{31,63}$
                      description: An application Access key, to be used with UNI interface to authorize UCs Access to a given application
                    category:
                      type: string
                      enum:
                        - IOT
                        - HEALTH_CARE
                        - GAMING
                        - VIRTUAL_REALITY
                        - SOCIALIZING
                        - SURVELIANCE
                        - ENTERTAINMENT
                        - CONNECTIVITY
                        - PRODUCTIVITY
                        - SECURITY
                        - IDUSTRIAL
                        - EDUCATION
                        - OTHERS    
                      description:  Possible categorization of the application                        
                appQoSProfile:
                  description: Parameters corresponding to the performance constraints, tenancy details etc.
                  type: object
                  required:
                    - latencyConstraints
                  properties:
                    latencyConstraints:
                      type: string
                      enum:
                        - NONE
                        - LOW
                        - ULTRALOW
                      description: Latency requirements for the application. 
                                          Allowed values (non-standardized) are none, low and ultra low. Ultra Low may corresponds to range 15 - 30 msec, 
                                          Low correspond to range 30 - 50 msec. None means 51 and above
                    bandwidthRequired:
                      type: integer
                      format: int32
                      minimum: 1
                      description: Data transfer bandwidth requirement (minimum limit) for the application. It should in Mbits/sec
                    multiUserClients:
                      type: string
                      enum: 
                        - APP_TYPE_SINGLE_USER
                        - APP_TYPE_MULTI_USER
                      default: APP_TYPE_SINGLE_USER
                      description: Single user type application are designed to serve just one client. Multi user type application is designed to serve mulitple clients
                    noOfUsersPerAppInst:
                      type: integer
                      default: 1
                      description: Maximum no of clients that can connect to an instance of this application. This parameter is relevant only for application of type multi user
                    appProvisioning:
                      type: boolean
                      default: true                      
                      description: Define if application can be instantiated or not
                appComponentSpecs:
                  description: An application may consist of more then one component. Each component is assosiated with a descriptor and may exposes its services 
                                      externally or internally.  App providers are required to provide details about all these components, thier assosiated descriptors and thier 
                                      DNS names. 
                  type: array
                  items:
                    type: object
                    required:
                      - serviceNameNB
                      - componentname
                      - artifactId
                    properties:
                      serviceNameNB: 
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description:  Must be a valid RFC 1035 label name.  This defines the DNS name via which the component can be accessed over NBI. 
                                             Access via serviceNameNB is restricted on specific ports. Platform shall expose component access externally via this DNS name
                      serviceNameEW: 
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description:  Must be a valid RFC 1035 label name.  This defines the DNS name via which the component can be accessed via peer components.
                                             Access via serviceNameEW is open on all ports.   Platform shall not expose serviceNameEW externally outside edge.
                      componentName:
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description: Must be a valid RFC 1035 label name.  Component name must be unique with an application
                      artifactId:
                        $ref:  '#/components/schemas/ArtifactId'    
                  minItems: 1            

        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'  

 
    patch:
      summary: Updates an OP about changes in  application compute resource requirements, QOS Profile, assosiated descriptor or change in assosiated components
      operationId: updateApplication
      tags:
        - Application Onboarding Management
      parameters:      
        - name: appId
          in: path
          required: true
          schema:
           $ref:  '#/components/schemas/AppIdentifier'    
      requestBody:
        required: true
        description: Details about application compute resource requirements, assosiated artifact and QOS profile that needs to be updated.
        content:
          application/json:
            schema:
              type: object
              minProperties: 1      
              properties:                     
                appUpdQoSProfile: 
                  description: Parameters corresponding to the performance constraints, tenancy details etc.
                  type: object
                  anyOf:
                    - required:
                      - latencyConstraint
                    - required:
                      - bandwidthRequired
                    - required:
                      - mobilitySupport
                    - required:
                      - multiUserClients  
                    - required:
                      - appProvisioning
                  properties:
                    latencyConstraints:
                      type: string
                      enum:
                        - NONE
                        - LOW
                        - ULTRALOW
                      description: Latency requirements for the application. 
                                          Allowed values (non-standardized) are none, low and ultra low. Ultra Low may corresponds to range 15 - 30 msec, 
                                          Low correspond to range 30 - 50 msec. None means 51 and above
                    bandwidthRequired:
                      type: integer
                      format: int32
                      minimum: 1
                      description: Data transfer bandwidth requirement (minimum limit) for the application. It should in Mbits/sec
                    mobilitySupport:
                      type: boolean
                      default: false
                      description: Indicates if an application is sensitive to user mobility and can be relocated. Default is “FALSE”
                    multiUserClients:
                      type: string
                      enum: 
                        - APP_TYPE_SINGLE_USER
                        - APP_TYPE_MULTI_USER
                      description: Single user type application are designed to serve just one client. Multi user type application is designed to serve mulitple clients
                    noOfUsersPerAppInst:
                      type: integer
                      default: 1
                      description: Maximum no of clients that can connect to an instance of this application. This parameter is relevant only for application of type multi user
                    appProvisioning:
                      type: boolean
                      default: true                      
                      description: Define if application can be instantiated or not
                appComponentSpecs:
                  description: An application may consist of more then one component. Each component is assosiated with a descriptor and may exposes its services 
                                      externally or internally.  App providers are required to provide details about all these components, thier assosiated descriptors and thier 
                                      DNS names. 
                  type: array
                  items:
                    type: object
                    required:
                       - componentName                   
                    anyOf:
                      - required:
                        - serviceNameNB
                      - required:
                        - serviceNameEW                       
                      - required:
                        - artifactId
                    properties:
                      serviceNameNB: 
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description:  Must be a valid RFC 1035 label name.  This defines the DNS name via which the component can be accessed over NBI. 
                                             Access via serviceNameNB is restricted on specific ports. Platform shall expose component access externally via this DNS name
                      serviceNameEW: 
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description:  Must be a valid RFC 1035 label name.  This defines the DNS name via which the component can be accessed via peer components.
                                             Access via serviceNameEW is open on all ports.   Platform shall not expose serviceNameEW externally outside edge.
                      componentName:
                        type: string
                        pattern:  ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description: Must be a valid RFC 1035 label name.  Component name must be unique with an application
                      artifactId:
                        $ref:  '#/components/schemas/ArtifactId'    
                  minItems: 1
      responses:       
        '202':
          description: Application update request accepted 
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 

  /application/onboarding/{appId}/zone/{zoneId}:
    delete:
      summary: Deboards an application from partner OP zones
      operationId: DeboardApplication
      tags:
        - Application Onboarding Management
      parameters:       
        - name: appId
          in: path
          required: true
          schema:
           $ref:  '#/components/schemas/AppIdentifier'     
        - name: zoneId
          in: path
          required: true
          schema:
           $ref:  '#/components/schemas/ZoneIdentifier'   
        - name: operator
          in: query
          required: false
          schema:
           $ref:  '#/components/schemas/OperatorIdentifier'  
        - name: opCountry
          in: query
          required: false
          schema:
           $ref:  '#/components/schemas/CountryCode'             
      responses:       
        '202':
          description: Application deboard request accepted
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 
           
  /application/onboarding/{appId}/additionalZones:
    post:
      summary: Onboards an existing application to a new zone.       
      operationId: onboardExistingAppNewZones
      tags:
        - Application Onboarding Management
      parameters:
        -   name: appId    
            in: path
            required: true
            schema:
                $ref:  '#/components/schemas/AppIdentifier'             
      requestBody:
        required: true
        description: Details about application compute resource requirements, assosiated artifacts, QoS profile and regions where application shall be made available etc.
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                description: List of additional zones where application should be made available. Parameters 'operator' and 'opCountry'  shall be specified if zone belongs to a partner OP.
              required:
                - zoneId
              properties:
                zoneId:
                  $ref:  '#/components/schemas/ZoneIdentifier'       
                operator:
                  $ref:  '#/components/schemas/OperatorIdentifier'
                opCountry:
                  $ref:  '#/components/schemas/CountryCode'
              minItems: 1
      responses:       
        '202':
          description: Application onboarding request accepted
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 
 
 
  /application/onboarding/{appId}/zoneForbid:
    post:
      summary: Restrict/unrestrict application instantiation on a zone
      operationId: lockUnlockApplicationZone
      tags:
        - Application Onboarding Management
      parameters:
        -   name: appId    
            in: path
            required: true
            schema:
                $ref:  '#/components/schemas/AppIdentifier'             
      requestBody:
        required: true
        description: Details about application compute resource requirements, assosiated artifacts, QoS profile and regions where application shall be made available etc.
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                description: List of additional zones where application should be made available. Parameters 'operator' and 'opCountry'  shall be specified if zone belongs to a partner OP.
              required:
                - zoneId
                - forbid
              properties:
                zoneId:
                  $ref:  '#/components/schemas/ZoneIdentifier'   
                forbid:
                  type: boolean
                  description: Value 'true' wiill forbid application instantiation on this zone.  No new instance of the application can be created on this zone.
                operator:
                  $ref:  '#/components/schemas/OperatorIdentifier'
                opCountry:
                  $ref:  '#/components/schemas/CountryCode'
              minItems: 1
      responses:       
        '200':
          description: Application forbid/permit request accepted
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 
            
  /application/lcm/{appId}:
    post:
      summary: Instantiates an application on an OP zone.
      operationId: instantiateApplication
      tags:  
        - Application Instance Lifecycle Management
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            $ref:  '#/components/schemas/AppIdentifier'     
      requestBody:
        description: Details about application and zones where application instance should be created. Field 'operator' and 'opCountry' should be specified if the zone  belongs to a partner OP.
        content:
          application/json:
            schema:
              type: object
              required:
                - appId
                - appProviderId
                - appVersion
                - zoneId     
              properties:
                appId:
                  $ref: '#/components/schemas/AppIdentifier'
                appVersion:
                  $ref: '#/components/schemas/Version'
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId' 
                zoneId:
                  $ref: '#/components/schemas/ZoneIdentifier' 
                operator:
                  $ref:  '#/components/schemas/OperatorIdentifier'
                opCountry:
                  $ref:  '#/components/schemas/CountryCode'
      responses:       
        '202':
          description:  Application instance creation request accepted.
          content: 
            application/json:
              schema:         
                $ref: '#/components/schemas/InstanceIdentifier'
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'  


                   
  /application/lcm/{appId}/instance/{appInstanceId}/zone/{zoneId}:
    get:
      summary: Retrieves an application instance details from OP.
      operationId: viewApplicationInstance
      tags:  
        - Application Instance Lifecycle Management
      parameters:   
        -   name: appId    
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/AppIdentifier'     
        -   name: appInstanceId    
            in: path
            required: true
            schema:
              $ref:  '#/components/schemas/InstanceIdentifier'    
        -   name: zoneId    
            in: path
            required: true
            schema:
              $ref:  '#/components/schemas/ZoneIdentifier'    
        -   name: operator    
            in: query
            required: false
            schema:
              $ref:  '#/components/schemas/OperatorIdentifier'    
        -   name: opCountry    
            in: query
            required: false
            schema:
              $ref:  '#/components/schemas/CountryCode'                    
      responses:
        '200':
          description: Application instance details
          content: 
            application/json:
              schema:         
                type: object
                minProperties: 1
                properties:
                  appInstanceState:
                    $ref:  '#/components/schemas/InstanceState'
                  accesspointInfo:
                    description: Information about the IP and Port exposed by the OP. Application clients shall use these access points to reach this application instance
                    type: array
                    items:
                      type: object
                      required:
                        - interfaceId
                        - accessPoints
                      properties:
                        interfaceId:     
                          type: string
                          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                          description:  This is the interfaceId that app provider defines when application is onboarded.  
                        accessPoints:
                          $ref: '#/components/schemas/ServiceEndpoint'                                
                    minItems: 1                            
                
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'           
    
    delete:
      summary: Terminate an application instance on a partner OP zone.
      operationId: removeApplicationInstance
      tags:  
        - Application Instance Lifecycle Management
      parameters:
        -   name: appId    
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/AppIdentifier'     
        -   name: appInstanceId    
            in: path
            required: true
            schema:
              $ref:  '#/components/schemas/InstanceIdentifier'    
        -   name: zoneId    
            in: path
            required: true
            schema:
              $ref:  '#/components/schemas/ZoneIdentifier'  
        -   name: operator    
            in: query
            required: false
            schema:
              $ref:  '#/components/schemas/OperatorIdentifier'    
        -   name: opCountry    
            in: query
            required: false
            schema:
              $ref:  '#/components/schemas/CountryCode'                       
      responses:
        '200':
          description: Application instance termination request accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'      
  
  /application/lcm/{appId}/appProvider/{appProviderId}:
    get:
      summary: Retrieves all application instance currently deployed across all zones
      operationId: listApplicationInstances 
      tags:  
        - Application Instance Lifecycle Management
      parameters:       
        -   name: appId    
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/AppIdentifier'     
        -   name: appProviderId    
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/AppProviderId'                
      responses:
        '200':
          description: Application Instance details
          content: 
            application/json:
              schema:         
                type: array
                items:
                   $ref: '#/components/schemas/AppInstanceList'
                minItems: 1         
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'       
            
  /edgeCloud/zones/appProvider/{appProviderId}:
    get:
      summary: Retrieves details of all zones (including partner OP zones).  These are the zone that OP offers to application provider for application deployment and resource reservation.
      operationId: listAvailableZones 
      tags:  
        - Edge Cloud Zone Management
      parameters:       
        -   name: appProviderId    
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/AppProviderId'                
      responses:
        '200':
          description: Zone details
          content: 
            application/json:
              schema:         
                type: array
                items:
                   $ref: '#/components/schemas/ZoneDetails'
                minItems: 1         
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'    
            
  /isv/identity/{appProviderId}:
    post:
      summary: Registers an application provider with the OP
      operationId:  registerAppProvider
      tags:  
        - Application Provider Identity Management
      parameters:       
        -   name: appProviderId    
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/AppProviderId'  
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityInfo' 
      responses:       
        '200':
          description:  ISV registered successfully    
        '400':
            $ref: '#/components/responses/400'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 
            
    delete:
      summary: Deregisters an application provider with the OP
      operationId:  deregisterAppProvider
      tags:  
        - Application Provider Identity Management
      parameters:       
        -   name: appProviderId    
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/AppProviderId'  
      responses:       
        '200':
          description:  ISV registered successfully        
        '400':
            $ref: '#/components/responses/400'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'             
           
    get:
      summary: Retrieves identity details of an  application provider registered with the OP
      operationId:  viewAppProviderIdentity
      tags:  
        - Application Provider Identity Management
      parameters:       
        -   name: appProviderId    
            in: path
            required: true
            schema:
                $ref: '#/components/schemas/AppProviderId'  
      responses:       
        '200':
          description:  ISV identity details
          content: 
            application/json:
              schema:         
                type: array
                items:
                   $ref: '#/components/schemas/IdentityInfo'
                minItems: 1               
        '400':
            $ref: '#/components/responses/400'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default' 
